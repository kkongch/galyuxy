// 코드가 자동 생성된 사실과 그 출처, 사용된 커맨드를 나타내는 주석입니다.
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 poly.glb 
*/

import React, { Suspense, useRef } from 'react';
import { useGLTF, OrbitControls } from '@react-three/drei';
import { Canvas } from '@react-three/fiber';
import { styled } from 'styled-components';
import { useThree } from '@react-three/fiber';
import { useNavigate, useParams } from 'react-router-dom';
import { getHeritage } from 'api/HeritageApi';
import { AmbientLight } from 'three';

const Background = styled.div`
  background-color: black;
  height: 100vh;
  width: 100vw;
  display: flex; // Flexbox 레이아웃 사용
  justify-content: center; // 가로축 중앙 정렬
  align-items: center; // 세로축 중앙 정렬
  flex-direction: column;
  padding-top: 20rem;
`;
const BackgroundBox = styled.div`
  position: relative;
  /* top: 10%;
  left: 10%; */
  width: 100%; // 뷰포트 너비의 100%
  height: 100%; // 뷰포트 높이의 100%

  display: flex; // Flexbox 레이아웃 사용
  justify-content: center; // 가로축 중앙 정렬
  align-items: center; // 세로축 중앙 정렬
  background-color: #eeeeee;
  z-index: 1;
`;
const Heritage3dBox = styled.div`
  position: 'absolute';
  height: '100%';
`;
const ButtonBox = styled.div`
  margin-bottom: 12rem;
  margin-right: 6rem;
  margin-top: 1.5rem;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  width: 100%;
  z-index: 6;
`;
const BackButton = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 22.5rem;
  height: 7.5rem;
  border-radius: 3.75rem;
  box-shadow: 10px 10px 10px 0px rgba(0, 0, 0, 0.25);
  background-color: #d9d9d9;
  font-size: 2.5rem;
  text-align: center;
  padding: 0 3.5rem;
  font-weight: 700;
  cursor: pointer;
`;
const SvgBox = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  width: auto;
  height: 4.6875rem;
`;

const Model = (props) => {
  const { nodes, materials } = useGLTF(
    process.env.PUBLIC_URL + '/goldcrown.gltf'
  );
  console.log(useGLTF(process.env.PUBLIC_URL + '/goldcrown.gltf'));

  // const { nodes, materials } = useGLTF(
  // 'https://galyuxy.s3.ap-northeast-2.amazonaws.com/3d/goldcrown.gltf'
  // );

  // 컴포넌트가 렌더링하는 JSX를 반환합니다.
  // 'group'은 three.js에서 3D 객체를 그룹화하기 위한 컨테이너입니다.
  // 여기서는 모든 전달받은 props를 group 요소에 전달하고, dispose 함수를 null로 설정하여

  return (
    <group {...props} dispose={null} scale={[1, 1, 1]}>
      <mesh
        geometry={nodes.Object_2.geometry}
        material={nodes.Object_2.material}
      />
      <mesh
        geometry={nodes.Object_3.geometry}
        material={nodes.Object_3.material}
      />
      <mesh
        geometry={nodes.Object_4.geometry}
        material={nodes.Object_4.material}
      />
      <mesh
        geometry={nodes.Object_5.geometry}
        material={nodes.Object_5.material}
      />
      <mesh
        geometry={nodes.Object_6.geometry}
        material={nodes.Object_6.material}
      />
      <mesh
        geometry={nodes.Object_7.geometry}
        material={nodes.Object_7.material}
      />
    </group>
  );
};
const CameraController = () => {
  const { camera, gl } = useThree();
  camera.position.set(0, 0, 5);
  gl.setSize(window.innerWidth, window.innerHeight);
  return null;
};

export default function Heritage3D(props) {
  const params = useParams();
  const navigate = useNavigate();

  const handleBackClick = () => {
    console.log('click');
    navigate(`/heritage/${params.id}`);
  };

  return (
    <Background>
      <BackgroundBox>
        <Heritage3dBox>
          <Canvas>
            <CameraController />
            <OrbitControls
              enableZoom={true}
              zoomSpeed={1}
              target={[0, 0.6, 0]}
            />
            {/* <axesHelper args={[200, 200, 200]} /> */}
            <ambientLight intensity={15} />
            <directionalLight />
            <Suspense fallback={null}>
              {/* 로딩 중에 보여줄 컴포넌트를 fallback에 넣습니다. */}
              <Model props={props} />
            </Suspense>
          </Canvas>
        </Heritage3dBox>
      </BackgroundBox>
      <ButtonBox>
        <BackButton onClick={handleBackClick}>
          <SvgBox>
            <svg
              width='76'
              height='75'
              viewBox='0 0 76 75'
              fill='none'
              xmlns='http://www.w3.org/2000/svg'
            >
              <path
                d='M6.52344 37.5C6.52344 54.75 20.601 68.75 37.9466 68.75C55.2921 68.75 69.3697 54.75 69.3697 37.5C69.3697 20.25 55.2921 6.25 37.9466 6.25C20.601 6.25 6.52344 20.25 6.52344 37.5ZM63.0851 37.5C63.0851 51.3125 51.8356 62.5 37.9466 62.5C24.0575 62.5 12.8081 51.3125 12.8081 37.5C12.8081 23.6875 24.0575 12.5 37.9466 12.5C51.8356 12.5 63.0851 23.6875 63.0851 37.5ZM25.3773 37.5L37.9466 25L42.3772 29.4062L37.4124 34.375H50.5158V40.625H37.4124L42.4087 45.5938L37.9466 50L25.3773 37.5Z'
                fill='black'
              />
            </svg>
          </SvgBox>
          <p>뒤로 가기</p>
        </BackButton>
      </ButtonBox>
    </Background>
  );
}

// 'useGLTF.preload'를 사용하여 컴포넌트가 마운트되기 전에 'images/Heritage/poly.glb' 모델을 사전 로드합니다.
// 이렇게 하면 나중에 컴포넌트를 사용할 때 모델이 이미 로드되어 있어 렌더링 속도가 빨라집니다.
useGLTF.preload('/goldcrown.gltf');
