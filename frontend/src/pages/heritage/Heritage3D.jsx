// 코드가 자동 생성된 사실과 그 출처, 사용된 커맨드를 나타내는 주석입니다.
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 poly.glb 
*/

import React, { Suspense, useEffect, useRef } from 'react';
import { useGLTF, OrbitControls } from '@react-three/drei';
import { Canvas } from '@react-three/fiber';
import { styled } from 'styled-components';
import { useThree } from '@react-three/fiber';
import { useNavigate, useParams } from 'react-router-dom';

const Background = styled.div`
  background-color: black;
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding-top: 20rem;
`;
const BackgroundBox = styled.div`
  position: relative;
  width: 100%;
  height: 100%;

  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #eeeeee;
  z-index: 1;
`;
const Heritage3dBox = styled.div`
  position: 'absolute';
  height: '100%';
`;
const ButtonBox = styled.div`
  margin-bottom: 12rem;
  margin-right: 6rem;
  margin-top: 1.5rem;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  width: 100%;
  z-index: 6;
`;
const BackButton = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 22.5rem;
  height: 7.5rem;
  border-radius: 3.75rem;
  box-shadow: 10px 10px 10px 0px rgba(0, 0, 0, 0.25);
  background-color: #d9d9d9;
  font-size: 2.5rem;
  text-align: center;
  padding: 0 3.5rem;
  font-weight: 700;
  cursor: pointer;
`;
const SvgBox = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  width: auto;
  height: 4.6875rem;
`;

const Model16 = (props) => {
  const { nodes } = useGLTF(`${process.env.PUBLIC_URL}/goldcrown.gltf`);

  return (
    <group {...props} dispose={null} scale={[1, 1, 1]}>
      {[
        'Object_2',
        'Object_3',
        'Object_4',
        'Object_5',
        'Object_6',
        'Object_7',
      ].map((object, index) => (
        <mesh
          key={index}
          geometry={nodes[object].geometry}
          material={nodes[object].material}
        />
      ))}
    </group>
  );
};

const Model27 = (props) => {
  const { nodes } = useGLTF(
    `${process.env.PUBLIC_URL}/hemisphericalSundial.gltf`
  );

  console.log(useGLTF(`${process.env.PUBLIC_URL}/hemisphericalSundial.gltf`));

  return (
    <group {...props} dispose={null} scale={[1, 1, 1]}>
      {['Object_2'].map((object, index) => (
        <mesh
          key={index}
          geometry={nodes[object].geometry}
          material={nodes[object].material}
          position={[0, 2.82, 0]}
        />
      ))}
    </group>
  );
};

const Model28 = (props) => {
  const { nodes } = useGLTF(`${process.env.PUBLIC_URL}/jagyeongru.gltf`);

  console.log(useGLTF(`${process.env.PUBLIC_URL}/jagyeongru.gltf`));

  return (
    <group {...props} dispose={null} scale={[1, 1, 1]}>
      {['Object_2'].map((object, index) => (
        <mesh
          key={index}
          geometry={nodes[object].geometry}
          material={nodes[object].material}
        />
      ))}
    </group>
  );
};

const Model69 = (props) => {
  const { nodes } = useGLTF(`${process.env.PUBLIC_URL}/3dpea.gltf`);

  console.log(useGLTF(`${process.env.PUBLIC_URL}/3dpea.gltf`));

  return (
    <group {...props} dispose={null} scale={[1, 1, 1]}>
      {['mesh_0'].map((object, index) => (
        <mesh
          key={index}
          geometry={nodes[object].geometry}
          material={nodes[object].material}
        />
      ))}
    </group>
  );
};

const Model0 = (props) => {
  const { nodes } = useGLTF(process.env.PUBLIC_URL + '/goldcrown.gltf');

  return (
    <group {...props} dispose={null} scale={[1, 1, 1]}>
      {[
        'Object_2',
        'Object_3',
        'Object_4',
        'Object_5',
        'Object_6',
        'Object_7',
      ].map((object, index) => (
        <mesh
          key={index}
          geometry={nodes[object].geometry}
          material={nodes[object].material}
        />
      ))}
    </group>
  );
};

const CameraController = ({ x, y, z }) => {
  const { camera, gl } = useThree();
  camera.position.set(x, y, z);
  useEffect(() => {
    console.log(camera.position);
  }, []);
  gl.setSize(window.innerWidth, window.innerHeight);
  return null;
};

export default function Heritage3D(props) {
  const { id } = useParams();
  const navigate = useNavigate();

  const handleBackClick = () => {
    console.log('click');
    navigate(`/heritage/${id}`);
  };

  return (
    <Background>
      <BackgroundBox>
        <Heritage3dBox>
          <Canvas>
            <OrbitControls
              enableZoom={true}
              zoomSpeed={1.2}
              target={[0, 0.6, 0]}
            />
            <axesHelper args={[500, 500, 500]} />
            <directionalLight />
            <Suspense fallback={null}>
              {id === '16' ? (
                <>
                  <Model16 props={props} />
                  <CameraController x={4} y={1} z={6} />
                  <ambientLight intensity={20} />
                </>
              ) : id === '27' ? (
                <>
                  <Model27 props={props} />
                  <CameraController x={2} y={1} z={2} />
                  <ambientLight intensity={20} />
                </>
              ) : id === '28' ? (
                <>
                  <Model28 props={props} />
                  <CameraController x={0} y={0} z={4} />
                  <ambientLight intensity={2} />
                </>
              ) : id === '69' ? (
                <>
                  <Model69 props={props} />
                  <CameraController x={0.8} y={1} z={2.2} />
                  <ambientLight intensity={2} />
                </>
              ) : (
                <Model0 props={props} />
              )}
            </Suspense>
          </Canvas>
        </Heritage3dBox>
      </BackgroundBox>
      <ButtonBox>
        <BackButton onClick={handleBackClick}>
          <SvgBox>
            <svg
              width='76'
              height='75'
              viewBox='0 0 76 75'
              fill='none'
              xmlns='http://www.w3.org/2000/svg'
            >
              <path
                d='M6.52344 37.5C6.52344 54.75 20.601 68.75 37.9466 68.75C55.2921 68.75 69.3697 54.75 69.3697 37.5C69.3697 20.25 55.2921 6.25 37.9466 6.25C20.601 6.25 6.52344 20.25 6.52344 37.5ZM63.0851 37.5C63.0851 51.3125 51.8356 62.5 37.9466 62.5C24.0575 62.5 12.8081 51.3125 12.8081 37.5C12.8081 23.6875 24.0575 12.5 37.9466 12.5C51.8356 12.5 63.0851 23.6875 63.0851 37.5ZM25.3773 37.5L37.9466 25L42.3772 29.4062L37.4124 34.375H50.5158V40.625H37.4124L42.4087 45.5938L37.9466 50L25.3773 37.5Z'
                fill='black'
              />
            </svg>
          </SvgBox>
          <p>뒤로 가기</p>
        </BackButton>
      </ButtonBox>
    </Background>
  );
}
